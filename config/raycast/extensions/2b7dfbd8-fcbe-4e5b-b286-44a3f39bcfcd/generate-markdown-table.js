"use strict";var c=Object.defineProperty;var p=Object.getOwnPropertyDescriptor;var d=Object.getOwnPropertyNames;var w=Object.prototype.hasOwnProperty;var g=(o,e)=>{for(var s in e)c(o,s,{get:e[s],enumerable:!0})},h=(o,e,s,u)=>{if(e&&typeof e=="object"||typeof e=="function")for(let r of d(e))!w.call(o,r)&&r!==s&&c(o,r,{get:()=>e[r],enumerable:!(u=p(e,r))||u.enumerable});return o};var y=o=>h(c({},"__esModule",{value:!0}),o);var C={};g(C,{default:()=>m});module.exports=y(C);var n=require("@raycast/api");async function m(o){let{rows:e,columns:s}=o.arguments,u=parseInt(e,10),r=parseInt(s,10);function b(i,f){let t="";for(let a=0;a<2;a++){t+="|";for(let l=0;l<i;l++)t+=a===0?` Column ${l+1} |`:" --- |";t+=`
`}for(let a=0;a<f;a++){t+="|";for(let l=0;l<i;l++)t+=` Cell ${a+1}-${l+1} |`;t+=`
`}return t}Number.isInteger(u)&&Number.isInteger(r)&&u>0&&r>0?((0,n.showToast)(n.Toast.Style.Success,"Markdown table copied to clipboard!"),await n.Clipboard.copy(b(r,u))):(0,n.showToast)(n.Toast.Style.Failure,"Please enter an integer value greater than zero for both rows and columns.")}
